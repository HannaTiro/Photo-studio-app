// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PhotoStudio.Database;

namespace PhotoStudio.Migrations
{
    [DbContext(typeof(PhotoStudioContext))]
    partial class PhotoStudioContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:Collation", "Bosnian_Latin_100_BIN")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.13")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("PhotoStudio.Database.Fotograf", b =>
                {
                    b.Property<int>("FotografId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double?>("DnevnaCijena")
                        .HasColumnType("float");

                    b.Property<string>("Ime")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Opis")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Prezime")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<byte[]>("Slika")
                        .HasMaxLength(1)
                        .HasColumnType("binary(1)")
                        .IsFixedLength(true);

                    b.Property<bool?>("Status")
                        .HasColumnType("bit");

                    b.Property<int?>("TipFotografaId")
                        .HasColumnType("int");

                    b.HasKey("FotografId");

                    b.HasIndex("TipFotografaId");

                    b.ToTable("Fotograf");
                });

            modelBuilder.Entity("PhotoStudio.Database.Grad", b =>
                {
                    b.Property<int>("GradId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("NazivGrada")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PostanskiBroj")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("GradId");

                    b.ToTable("Grad");
                });

            modelBuilder.Entity("PhotoStudio.Database.Komentar", b =>
                {
                    b.Property<int>("KomentarId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("Datum")
                        .HasColumnType("datetime");

                    b.Property<int?>("FotografId")
                        .HasColumnType("int");

                    b.Property<int?>("KorisnikId")
                        .HasColumnType("int");

                    b.Property<string>("Opis")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("KomentarId");

                    b.HasIndex("FotografId");

                    b.HasIndex("KorisnikId");

                    b.ToTable("Komentar");
                });

            modelBuilder.Entity("PhotoStudio.Database.Korisnik", b =>
                {
                    b.Property<int>("KorisnikId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int?>("GradId")
                        .HasColumnType("int");

                    b.Property<string>("Ime")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("PasswordHash")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("PasswordSalt")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Prezime")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Telefon")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int?>("TipKorisnikaId")
                        .HasColumnType("int");

                    b.Property<string>("Username")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("KorisnikId");

                    b.HasIndex("GradId");

                    b.HasIndex("TipKorisnikaId");

                    b.ToTable("Korisnik");
                });

            modelBuilder.Entity("PhotoStudio.Database.Rejting", b =>
                {
                    b.Property<int>("RejtingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("DatumOcjene")
                        .HasColumnType("datetime");

                    b.Property<int?>("FotografId")
                        .HasColumnType("int");

                    b.Property<int?>("KorisnikId")
                        .HasColumnType("int");

                    b.Property<int?>("Ocjena")
                        .HasColumnType("int");

                    b.HasKey("RejtingId");

                    b.HasIndex("FotografId");

                    b.HasIndex("KorisnikId");

                    b.ToTable("Rejting");
                });

            modelBuilder.Entity("PhotoStudio.Database.Rezervacija", b =>
                {
                    b.Property<int>("RezervacijaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("DatumDo")
                        .HasColumnType("datetime")
                        .HasColumnName("DatumDO");

                    b.Property<DateTime?>("DatumOd")
                        .HasColumnType("datetime")
                        .HasColumnName("DatumOD");

                    b.Property<int?>("FotografId")
                        .HasColumnType("int");

                    b.Property<int?>("KorisnikId")
                        .HasColumnType("int");

                    b.HasKey("RezervacijaId");

                    b.HasIndex("FotografId");

                    b.HasIndex("KorisnikId");

                    b.ToTable("Rezervacija");
                });

            modelBuilder.Entity("PhotoStudio.Database.Studio", b =>
                {
                    b.Property<int>("StudioId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Adresa")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("GradId")
                        .HasColumnType("int");

                    b.Property<string>("NazivStudija")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Opis")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Telefon")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("StudioId");

                    b.HasIndex("GradId");

                    b.ToTable("Studio");
                });

            modelBuilder.Entity("PhotoStudio.Database.TipFotografa", b =>
                {
                    b.Property<int>("TipFotografaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Naziv")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("TipFotografaId");

                    b.ToTable("TipFotografa");
                });

            modelBuilder.Entity("PhotoStudio.Database.TipKorisnika", b =>
                {
                    b.Property<int>("TipKorisnikaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Tip")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("TipKorisnikaId");

                    b.ToTable("TipKorisnika");
                });

            modelBuilder.Entity("PhotoStudio.Database.Fotograf", b =>
                {
                    b.HasOne("PhotoStudio.Database.TipFotografa", "TipFotografa")
                        .WithMany("Fotografs")
                        .HasForeignKey("TipFotografaId")
                        .HasConstraintName("fk_Fotograf_TipFotografa");

                    b.Navigation("TipFotografa");
                });

            modelBuilder.Entity("PhotoStudio.Database.Komentar", b =>
                {
                    b.HasOne("PhotoStudio.Database.Fotograf", "Fotograf")
                        .WithMany("Komentars")
                        .HasForeignKey("FotografId")
                        .HasConstraintName("fk_Fotograf_Komentar");

                    b.HasOne("PhotoStudio.Database.Korisnik", "Korisnik")
                        .WithMany("Komentars")
                        .HasForeignKey("KorisnikId")
                        .HasConstraintName("fk_Korisnik_Komentar");

                    b.Navigation("Fotograf");

                    b.Navigation("Korisnik");
                });

            modelBuilder.Entity("PhotoStudio.Database.Korisnik", b =>
                {
                    b.HasOne("PhotoStudio.Database.Grad", "Grad")
                        .WithMany("Korisniks")
                        .HasForeignKey("GradId")
                        .HasConstraintName("fk_Korisnik_Grad");

                    b.HasOne("PhotoStudio.Database.TipKorisnika", "TipKorisnika")
                        .WithMany("Korisniks")
                        .HasForeignKey("TipKorisnikaId")
                        .HasConstraintName("fk_Korisnik_TipKorisnika");

                    b.Navigation("Grad");

                    b.Navigation("TipKorisnika");
                });

            modelBuilder.Entity("PhotoStudio.Database.Rejting", b =>
                {
                    b.HasOne("PhotoStudio.Database.Fotograf", "Fotograf")
                        .WithMany("Rejtings")
                        .HasForeignKey("FotografId")
                        .HasConstraintName("fk_Rejting_Fotograf");

                    b.HasOne("PhotoStudio.Database.Korisnik", "Korisnik")
                        .WithMany("Rejtings")
                        .HasForeignKey("KorisnikId")
                        .HasConstraintName("fk_Rejting_Korisnik");

                    b.Navigation("Fotograf");

                    b.Navigation("Korisnik");
                });

            modelBuilder.Entity("PhotoStudio.Database.Rezervacija", b =>
                {
                    b.HasOne("PhotoStudio.Database.Fotograf", "Fotograf")
                        .WithMany("Rezervacijas")
                        .HasForeignKey("FotografId")
                        .HasConstraintName("fk_Rezervacija_Fotograf");

                    b.HasOne("PhotoStudio.Database.Korisnik", "Korisnik")
                        .WithMany("Rezervacijas")
                        .HasForeignKey("KorisnikId")
                        .HasConstraintName("fk_Korisnik_Rezervacija");

                    b.Navigation("Fotograf");

                    b.Navigation("Korisnik");
                });

            modelBuilder.Entity("PhotoStudio.Database.Studio", b =>
                {
                    b.HasOne("PhotoStudio.Database.Grad", "Grad")
                        .WithMany("Studios")
                        .HasForeignKey("GradId")
                        .HasConstraintName("fk_Studio_Grad");

                    b.Navigation("Grad");
                });

            modelBuilder.Entity("PhotoStudio.Database.Fotograf", b =>
                {
                    b.Navigation("Komentars");

                    b.Navigation("Rejtings");

                    b.Navigation("Rezervacijas");
                });

            modelBuilder.Entity("PhotoStudio.Database.Grad", b =>
                {
                    b.Navigation("Korisniks");

                    b.Navigation("Studios");
                });

            modelBuilder.Entity("PhotoStudio.Database.Korisnik", b =>
                {
                    b.Navigation("Komentars");

                    b.Navigation("Rejtings");

                    b.Navigation("Rezervacijas");
                });

            modelBuilder.Entity("PhotoStudio.Database.TipFotografa", b =>
                {
                    b.Navigation("Fotografs");
                });

            modelBuilder.Entity("PhotoStudio.Database.TipKorisnika", b =>
                {
                    b.Navigation("Korisniks");
                });
#pragma warning restore 612, 618
        }
    }
}
